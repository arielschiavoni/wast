# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'fileutils'

Vagrant.require_version ">= 1.6.3"

VAGRANTFILE_API_VERSION = "2"
CLOUD_CONFIG_PATH = File.join(File.dirname(__FILE__), "cloud-config")

# Defaults for config options defined in CONFIG
$num_instances = 1
$update_channel = "alpha"
$enable_serial_logging = false
$vb_gui = false
$vb_memory = 1024
$vb_cpus = 1
# $expose_docker_tcp = 2375

# Attempt to apply the deprecated environment variable NUM_INSTANCES to
# $num_instances while allowing config.rb to override it
if ENV["NUM_INSTANCES"].to_i > 0 && ENV["NUM_INSTANCES"]
  $num_instances = ENV["NUM_INSTANCES"].to_i
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "coreos-%s" % $update_channel
  config.vm.box_url = "http://%s.release.core-os.net/amd64-usr/current/coreos_production_vagrant.json" % $update_channel

  config.vm.provider :virtualbox do |v|
    # On VirtualBox, we don't have guest additions or a functional vboxsf
    # in CoreOS, so tell Vagrant that so it can be smarter.
    v.check_guest_additions = false
    v.functional_vboxsf     = false
  end

  # plugin conflict
  if Vagrant.has_plugin?("vagrant-vbguest") then
    config.vbguest.auto_update = false
  end

  (1..$num_instances).each do |i|
    config.vm.define vm_name = "core-%02d" % i do |config|
      config.vm.hostname = vm_name

      if $enable_serial_logging
        logdir = File.join(File.dirname(__FILE__), "log")
        FileUtils.mkdir_p(logdir)

        serialFile = File.join(logdir, "%s-serial.txt" % vm_name)
        FileUtils.touch(serialFile)

        config.vm.provider :virtualbox do |vb, override|
          vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
          vb.customize ["modifyvm", :id, "--uartmode1", serialFile]
        end
      end

      if $expose_docker_tcp
        config.vm.network "forwarded_port", guest: 2375, host: ($expose_docker_tcp + i - 1), auto_correct: true
      end

      config.vm.provider :virtualbox do |vb|
        vb.gui = $vb_gui
        vb.memory = $vb_memory
        vb.cpus = $vb_cpus
        vb.customize ["modifyvm", :id, "--groups", "/Wast"]
      end

      ip = "172.17.8.#{i+100}"
      config.vm.network :private_network, ip: ip
      # TODO investigate how to deal with port forwarding when we have more than one instance.
      config.vm.network "forwarded_port", guest: 8080, host_ip: "127.0.0.1", host: 8080
      config.vm.network "forwarded_port", guest: 4443, host_ip: "127.0.0.1", host: 4443
      config.vm.network "forwarded_port", guest: 9999, host_ip: "127.0.0.1", host: 9999
      config.vm.network "forwarded_port", guest: 5858, host_ip: "127.0.0.1", host: 5858
      config.vm.network "forwarded_port", guest: 27017, host_ip: "127.0.0.1", host: 27017
      config.vm.network "forwarded_port", guest: 28017, host_ip: "127.0.0.1", host: 28017

      # Uncomment below to enable NFS for sharing the host machine into the coreos-vagrant VM.
      config.vm.synced_folder "../../../wast/", "/home/core/wast", id: "core", :nfs => true, :mount_options => ['nolock,vers=3,udp']

      if File.exist?(CLOUD_CONFIG_PATH)
        config.vm.provision :file, :source => "#{CLOUD_CONFIG_PATH}", :destination => "/tmp/vagrantfile-user-data"
        config.vm.provision :shell, :inline => "mv /tmp/vagrantfile-user-data /var/lib/coreos-vagrant/", :privileged => true
      end

      # TODO check if we can specify privilegies to the prov script
      config.vm.provision :shell, run: "always" do |s|
        s.inline = <<-EOT
          # Enable forwarding localhost in VM which is required
          # to enable nodejs debugging port forwarding
          echo Enable localhost traffic routing
          sysctl -w net.ipv4.ip_forward=1
          sysctl -w net.ipv4.conf.all.route_localnet=1
        EOT
      end

    end
  end
end
